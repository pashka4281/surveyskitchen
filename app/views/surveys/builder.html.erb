<% header("Questions builder", subheader: 'All changes here are automatically saved.') %>

    	<div id="build_list"  class="list">
      		<h2 id="survey-name"><%= @survey.name %></h2>

			<div id="zero-item" class="insertable">
	            <%= insert_button %>
        	</div>
        
	        <div id="no-items-area" class="insertable">
	        	<%= insert_button %>
            	<div id="work-area-texting" class="fifteen columns centered centr-text vspace-big">
            		<h3>This is your working area.</h3>
            		<h5>Start building survey by inserting questions here.</h5>
	        	</div>
        	</div>
        
	        <%- @survey.sorted_items.each do |i| -%>
	          <%= render_survey_item(i) %>
	        <%- end -%>

    	</div>
  

	<div class="navbar navbar-fixed-bottom" id="newItemBar">
	  <div class="navbar-inner">
	  		<div class="container">
	  			<div class="btn-group pull-left">
	  				<!--  <%= link_to new_survey_item_path(@survey, format: :js), class: 'btn btn-primary', remote: true do %>
				    	<i class="icon-plus-sign"></i> New Item
				    <% end %> -->
				    <a href="#newItemContainer" role="button" data-toggle="modal" class="btn btn-primary">
				    	<i class="icon-plus-sign"></i> New Item
				    </a>
				    <a class="btn btn-info" href="#"><i class="icon-trash"></i> Trash box (0 items)</a>
				    <a class="btn btn-warning" href="#"><i class="icon-wrench"></i> Survey settings</a>
				</div>
		  		
				<a class="btn btn-success pull-right" href="#"><i class="icon-ok"></i> Done</a>
			</div>
	  </div>
	</div>

	<div class="modal hide fade" id="newItemContainer" data-remote="<%= new_survey_item_path(@survey) %>">
	  <div class="modal-header">
	    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
	    <h3>New Item</h3>
	  </div>
	  <div class="modal-body">
	  </div>
	  <div class="modal-footer">
	    <a href="#" class="btn" data-dismiss="modal" aria-hidden="true">Cancel</a>
	    <a href="#" class="btn btn-primary" data-dismiss="modal" id="doneNewItemBtn">Done</a>
	  </div>
	</div>


  <div style="display: none" id="trashedItemsContainer" class="reveal-modal large">
    <div class="modal_heading">
      <h5>Trash box</h5>
    </div>
    <div class="modal_content">
      <%=render 'survey_items/trashbox' %>
    </div>
    <div class="modal_footer row">
      <div class="two columns offset-by-thirteen">
        <a class="red button modal_close secondary cancelBtn">Close</a>
      </div>
  	</div>
  </div>




<%= content_for :js do %>
	<script>
		function BuilderUI(params){
			//CONSTRUCTOR:
			var self = this;
			this.buildList 		= '#build_list';
			this.survey_items 	= '.sortable_item';
			this.insertButtons 	= '.insert_buttons'; 
			this.delete_links 	= '.sortable_item .deleteLnk';
			this.noItemsArea 	= '#no-items-area';
			this.zeroItem 		= '#zero-item';
			this.updateSurveyUrl= params['updateSurveyUrl'];
			this.new_item_form_data = null;

			//editable survey title:
			$('#survey-name').tinyEditor(self.updateSurveyUrl, {postName: 'survey[name]'})

			//making survey items sortable
			$(this.buildList).sortable({ 
				axis: 'y', 
				items: 'div.sortable_item',
				//containment: 'parent',
				handle: '.moveGrabber',
				update: function(){ 
				  	var info = $(this).sortable("serialize", {
            			key: 'survey[items_positions][]'
          			});
			        $.ajax({
			            url: self.updateSurveyUrl,
			            type: "PUT",
			            data: info
			        });
				  	self.renewItemsIndexes();
				} 
			});

			$('#doneNewItemBtn').click(function(){
				self.new_item_form_data = $('#newItemForm').serialize();
				self.showButtons();
			});	

			//FUNCTIONS:
			
			this.insertItem = function(html, pos, total_items){
				var btn = $(this.insertButtons + '[itemindex='+ pos + ']');
				$(html).insertAfter(btn.parents('.insertable')).hide().slideDown();
				if(total_items == 0){ 
					$(this.zeroItem).show();
					$(this.noItemsArea).hide();
				} 
				this.renewItemsIndexes();
			}
			
			this.removeItem = function(id, total_items){
			  $(this.survey_items + '[item_id=' + id + ']').slideUp(300, function(){
			    $(this).remove();
			    if(total_items == 0){
					$(self.zeroItem).hide();
					$(self.noItemsArea).show();
				}
				self.renewItemsIndexes();
			  });
			}
			
			this._currentButtons = function(){
				if($(this.noItemsArea).is(':hidden')){
					return $(this.buildList).find(this.zeroItem +' '+ this.insertButtons + ', .sortable_item ' + this.insertButtons);
				}else {
					return $(this.buildList).find(this.noItemsArea+' '+this.insertButtons)
				}
			}
			
			//change all insert buttons labels to `label`
			this.buttonsLabel = function(label){ $(this.insertButtons).html(label) }
			this.showButtons = function(){ self._currentButtons().css('display', 'block') }
			this.hideButtons = function(){ self._currentButtons().fadeOut(200) }

			this.renewItemsIndexes = function(){
				$(this.insertButtons).removeAttr('itemindex'); //cleaning itemindexes
				self._currentButtons().each(function(i, el){
					$(el).attr('itemindex', i);
				});
			}
			
			this.renewItemsIndexes();
		} 
	
		function Survey(params){
			var self = this;
			//constructor
			this.survey_id = params['survey_id'];
			this.base_path = '/surveys/' + this.survey_id; // e.g. "/survey/1"
			this.newSurveyTypeSelector = $('#surveyTypeSelector');
			this.newSurveyTypeSelector.dropkick();
			this.total_items = params['total_items'];
			if(self.total_items == 0){ 
				$('#no-items-area').show();
				$('#zero-item').hide();
			}

			this.builder_ui = new BuilderUI({updateSurveyUrl: params['survey_update_url']});

			//insert buttons click handler:
			$(this.builder_ui.insertButtons).live('click', function(){
				self.addItem($(this).attr('itemindex'), self.builder_ui.new_item_form_data);
				self.builder_ui.renewItemsIndexes();
				self.builder_ui.hideButtons();
			});

			//remove links click handler:
			$(this.builder_ui.delete_links).live('click', function(){
				self.deleteItem($(this).parents('.sortable_item').attr('item_id'));
				return false;
			});

			
			//callbacks:
			this.afterItemAdd	= undefined;
			this.onSuccCall  	= undefined;
			this.onErrorCall	= undefined;
			
			//functions			
			this.addItem = function(pos, params){
				var self = this;
				$.ajax(this.base_path + '/items', {
					type: 'POST',
					data: {
						item_params: params,
						item_position: pos
					}, 
					success: function(resp){ //resp contains new item markup
						self.builder_ui.insertItem(resp, pos, self.total_items);
						self.total_items += 1;
						if(self.afterItemAdd != undefined)
						  self.afterItemAdd(resp, pos);
					},
					error: function(){}
				});
			}		
			
			this.deleteItem = function(id){
			  var self = this;
				$.ajax(this.base_path + '/items/' + id + '/delete', {
					type: 'DELETE',
					success: function(){ //resp contains new item markup
						self.total_items -= 1;
						self.builder_ui.removeItem(id, self.total_items);
					},
					error: function(){}
				});
			}	
		}
		
		
		// document ready 
		$(function(){

			var survey = new Survey({
				survey_id: <%= @survey.id %>,
				survey_update_url: "<%= survey_path(@survey, format: :js) %>",
				total_items: <%= @survey.items.active.count %> 
			});
		});
	</script>
<% end %>

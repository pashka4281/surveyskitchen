<% header("Questions builder", subheader: 'All changes here are automatically saved.') %>

<%#=render 'shared/nav_menu' %>

  <div class="row">
   
    <div class="twelve columns centered top-span">
      <div id="build_list"  class="list">

      		<div class="row">
      			<div class="fourteen columns">
      				<h2 id="survey-name"><%= @survey.name%></h2>
      				<a href="#"><img src="/images/icons/edit.png" alt="Move item"></a>
      			</div>
      			
      		</div>

			<div id="zero-item" class="row insertable">
	            <div class="ten columns centered">
		            <a class="blue button insert_buttons">Insert here »</a>
		        </div>
        	</div>
        
        <div id="no-items-area" class="row insertable">
	        <div class="row">
            <div class="ten columns centered">
	            <a class="blue button insert_buttons">Insert here »</a>
	          </div>
	        </div>
          <div class="row">
            <div id="work-area-texting" class="fifteen columns centered centr-text vspace-big">
              <h3>This is your working area.</h3>
              <h5>Start building survey by inserting questions here.</h5>
	          </div>
          </div>

        </div>
        
        <%- @survey.sorted_items.each do |i| -%>
          <%= render_survey_item(i) %>
        <%- end -%>

      </div>
    </div>
  </div>
  
  <div id="newItemBar">
    <div class="row">
      
      <div class="twelve columns centered">
        <div class="row">
          <div class="three columns">
            <a class="blue button" id="newItemBtn" href="#newItemContainer" rel="leanModal">
              <img src="/images/icons/new_item.png">
              <span>Add New Item</span>
            </a>
          </div>
          <div class="three columns">
            <a class="orange button" id="trashBoxBtn" href="#trashedItemsContainer" rel="leanModal">
              <img src="/images/icons/trashbox_big.png">
              <span>Trash box (<%= @survey.items.trashed.count %>)</span>
            </a>
          </div>
          <div class="four columns">
            <a class="red button" id="trashBoxBtn" href="" rel="leanModal">
              <img src="/images/icons/settings_big.png">
              <span>Survey Settings</span>
            </a>
          </div>
          <div class="three columns right-text">
            <a class="green button">Done editing</a>
          </div>
          
          </div>
        </div>
        
      </div>
    </div>
  
  </div>



  <div style="display: none" id="newItemContainer" class="reveal-modal large">
    <div class="modal_heading">
      <h5>New Item</h5>
    </div>
    <div class="modal_content">
      <%=render 'survey_items/new' %>
    </div>
    <div class="modal_footer row">
      <div class="two columns offset-by-thirteen">
        <a class="red button modal_close secondary cancelBtn">Cancel</a>
      </div>
      <div class="one column">
        <a class="green button success modal_close" id="doneNewItemBtn">Done</a>
      </div>
  	</div>
  </div>

  <div style="display: none" id="trashedItemsContainer" class="reveal-modal large">
    <div class="modal_heading">
      <h5>Trash box</h5>
    </div>
    <div class="modal_content">
      <%=render 'survey_items/trashbox' %>
    </div>
    <div class="modal_footer row">
      <div class="two columns offset-by-thirteen">
        <a class="red button modal_close secondary cancelBtn">Close</a>
      </div>
  	</div>
  </div>




<%= content_for :js do %>
	<script>
		function BuilderUI(params){
			//CONSTRUCTOR:
			var self = this;
			this.buildList 		= '#build_list';
			this.survey_items 	= '.sortable_item';
			this.insertButtons 	= '.insert_buttons'; 
			this.delete_links 	= '.sortable_item .deleteLnk';
			this.noItemsArea 	= '#no-items-area';
			this.zeroItem 		= '#zero-item';
			this.updateSurveyUrl= params['updateSurveyUrl'];

			//editable survey title:
			$('#survey-name').tinyEditor(self.updateSurveyUrl, {})

			//making survey items sortable
			$(this.buildList).sortable({ 
				axis: 'y', 
				items: 'div.sortable_item',
				//containment: 'parent',
				handle: '.moveGrabber',
				update: function(){ 
				  	var info = $(this).sortable("serialize", {
            			key: 'survey[items_positions][]'
          			});
			        $.ajax({
			            url: self.updateSurveyUrl,
			            type: "PUT",
			            data: info
			        });
				  	self.renewItemsIndexes();
				} 
			});

			$('#doneNewItemBtn').click(function(){
			  self.showButtons();
			});	

			//FUNCTIONS:
			
			this.insertItem = function(html, pos, total_items){
				var btn = $(this.insertButtons + '[itemindex='+ pos + ']');
				$(html).insertAfter(btn.parents('.insertable')).hide().slideDown();
				if(total_items == 0){ 
					$(this.zeroItem).show();
					$(this.noItemsArea).hide();
				} 
				this.renewItemsIndexes();
			}
			
			this.removeItem = function(id, total_items){
			  $(this.survey_items + '[item_id=' + id + ']').slideUp(300, function(){
			    $(this).remove();
			    if(total_items == 0){
					$(self.zeroItem).hide();
					$(self.noItemsArea).show();
				}
				self.renewItemsIndexes();
			  });
			}
			
			this.renewItemsIndexes = function(){
				if($(this.noItemsArea).is(':hidden')){
					$(this.buildList).find(this.zeroItem +' '+ this.insertButtons + ', .sortable_item ' + this.insertButtons).each(function(i, el){
						$(el).attr('itemindex', i);
					});
				}else {
					$(this.buildList).find(this.noItemsArea+' '+this.insertButtons).each(function(i, el){
						$(el).attr('itemindex', i);
					});
				}
			}
			
			this.renewItemsIndexes();
			
			//change all insert buttons labels to `label`
			this.buttonsLabel = function(label){ $(this.insertButtons).html(label) }
			
			this.showButtons = function(){ $(this.insertButtons).css('display', 'block') }
			this.hideButtons = function(){ $(this.insertButtons).fadeOut(200) }			
		} 
	
		function Survey(params){
			//constructor
			var self = this;
			this.survey_id = params['survey_id'];
			this.base_path = '/surveys/' + this.survey_id; // e.g. "/survey/1"
			this.builder_ui = params['builder_ui'];
			this.total_items = params['total_items'];
			this.newItemForm = $('#newItemForm');
			this.newSurveyTypeSelector = $('#surveyTypeSelector');

			this.newSurveyTypeSelector.dropkick();

			if(self.total_items == 0){ 
				$('#no-items-area').show();
				$('#zero-item').hide();
			}

			//insert buttons click handler:
			$(this.builder_ui.insertButtons).live('click', function(){
				type = self.newSurveyTypeSelector.val();
				self.addItem(type, $(this).attr('itemindex'), self.newItemForm.serialize());
				self.builder_ui.renewItemsIndexes();
				self.builder_ui.hideButtons();
			});

			$('.cancelBtn').click(function(){
			  self.newSurveyTypeSelector.change();
			});

			
			//callbacks:
			this.afterItemAdd 	= undefined;
			this.onSuccCall  	= undefined;
			this.onErrorCall	= undefined;
			
			//functions			
			this.addItem = function(type, pos, params){
				var self = this;
				$.ajax(this.base_path + '/items', {
					type: 'POST',
					data: {
						item_type: type,
						item_params: params,
						item_position: pos
					}, 
					success: function(resp){ //resp contains new item markup
						self.builder_ui.insertItem(resp, pos, self.total_items);
						self.total_items += 1;
						if(self.afterItemAdd != undefined)
						  self.afterItemAdd(resp, pos);
					},
					error: function(){}
				});
			}		
			
			this.deleteItem = function(id){
			  var self = this;
				$.ajax(this.base_path + '/items/' + id + '/delete', {
					type: 'DELETE',
					success: function(){ //resp contains new item markup
						self.total_items -= 1;
						self.builder_ui.removeItem(id, self.total_items);
					},
					error: function(){}
				});
			}	
		}
		
		
		// document ready 
		$(function(){
		  	$('body').addClass('bottom-padding');
		  	$("a[rel*=leanModal]").leanModal({closeButton: ".modal_close", top: '15'});
			
			var builder_ui = new BuilderUI({
				updateSurveyUrl: "<%= survey_path(@survey, format: :js) %>"
			});

			var survey = new Survey({survey_id: <%= @survey.id%>, 
				builder_ui: builder_ui,
				total_items: <%= @survey.items.active.count %> 
			});			
			
			//remove links click handler:
			$(builder_ui.delete_links).live('click', function(){
				survey.deleteItem($(this).parents('.sortable_item').attr('item_id'));
				return false;
			});
			
		});
	</script>
<% end %>



